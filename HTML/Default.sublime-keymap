[
	{ "keys": ["ctrl+enter"], "command": "close_tag" },

	{
		"keys"   :	["ctrl+shift+enter"], 
		"command":	"insert_snippet",
		"args"   :	{ "contents": "<br>" },
		"context":	[ { "key": "selector", "operator": "equal", "operand": "text.html" } ]
	},

	{ // wrap tags. the built in wrap tags function works a little awkward.
		"keys"   :	["alt+shift+w"], 
		"command":	"insert_snippet",
		"args"   :	{ "contents": "<${1:p}>${0:$SELECTION}</${1/\\s.*//}>" }
	},


	{
		"keys"   :	["alt+shift+a"], 
		"command":	"insert_snippet",
		"args"   :	{ "contents": "<a href=\"${1:#}\">${2:$SELECTION}</a>" },
		"context":	[ { "key": "selector", "operator": "equal", "operand": "text.html" } ]
	},

	// autopair for angle brakets:
	// dont forget to add "auto_match_angle_brakets_enabled":true into base file.sublime-settings file (or at least into html file settings)
	{ "keys": ["<"], "command": "insert_snippet", "args": {"contents": "<$0>"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "setting.auto_match_angle_brakets_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|\\}|$)", "match_all": true },
			{ "key": "preceding_text", "operator": "not_regex_contains", "operand": "[\"a-zA-Z0-9_]$", "match_all": true },
			{ "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.double", "match_all": true },
			{ "key": "selector", "operator": "equal", "operand": "text.html" },
			{ "key": "selector", "operator": "not_equal", "operand": "source.php" }
		]
	},
	{ "keys": ["<"], "command": "insert_snippet", "args": {"contents": "<${0:$SELECTION}>"}, "context":
		[
			{ "key": "setting.auto_match_angle_brakets_enabled", "operator": "equal", "operand": true },
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true },
			{ "key": "selector", "operator": "equal", "operand": "text.html" },
			{ "key": "selector", "operator": "not_equal", "operand": "source.php" }
		]
	},
	{ "keys": ["<"], "command": "move", "args": {"by": "characters", "forward": true}, "context":
		[
			{ "key": "setting.auto_match_angle_brakets_enabled", "operator": "equal", "operand": true },
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^<", "match_all": true },
			{ "key": "selector", "operator": "equal", "operand": "text.html" },
			{ "key": "selector", "operator": "not_equal", "operand": "source.php" }
		]
	},
		{ "keys": [">"], "command": "move", "args": {"by": "characters", "forward": true}, "context":
		[
			{ "key": "setting.auto_match_angle_brakets_enabled", "operator": "equal", "operand": true },
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^>", "match_all": true },
			{ "key": "selector", "operator": "equal", "operand": "text.html" },
			{ "key": "selector", "operator": "not_equal", "operand": "source.php" }
		]
	},
	{ "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "Packages/Default/Delete Left Right.sublime-macro"}, "context":
		[
			{ "key": "setting.auto_match_angle_brakets_enabled", "operator": "equal", "operand": true },
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "<$", "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^>", "match_all": true },
			{ "key": "selector", "operator": "equal", "operand": "text.html" },
			{ "key": "selector", "operator": "not_equal", "operand": "source.php" }
		]
	},

	{
		"keys": ["~"], "args": {"contents": " href=\"$1\""},
		"command": "insert_snippet",
		"context": [
			{
				"operand": "text.html meta.tag -string -punctuation.definition.tag.begin.html -meta.scope.between-tag-pair.html -source",
				"operator": "equal", "match_all": true, "key": "selector"
			}
		]
	},

	{
		"keys": ["<", "%"], "args": {"contents": "<%$0 %>"},
		"command": "insert_snippet",
		"context": [{
			"operand": "text.html",
			"operator": "equal", "match_all": true, "key": "selector"
		}]
	}
]